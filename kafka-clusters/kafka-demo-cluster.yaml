apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: my-cluster
  namespace: kafka
spec:
  kafka:
    template:
      externalBootstrapService:
        metadata:
          annotations:
            # NLB Support
            service.beta.kubernetes.io/aws-load-balancer-type: nlb
            # Internally Exposed
            service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0
      perPodService:
        metadata:
          annotations:
            service.beta.kubernetes.io/aws-load-balancer-type: nlb
            service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0
      pod:
        # Affinity strategies
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: strimzi.io/cluster
                      operator: In 
                      values:
                        - my-kafka
                topologyKey: "kubernetes.io/hostname"
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                  - key: eks.amazonaws.com/nodegroup
                    operator: In 
                    values:
                    - kafka-rnd-nodegroup
    replicas: 3
    listeners:
      # Unsecured not recommended for Production
      - name: external
        port: 9094
        type: loadbalancer
        tls: false
        # m-TLS based deployment
      - name: external
        port: 9094
        type: loadbalancer
        tls: true
        # Scram based Deployment
      - name: external
        port: 9094
        type: loadbalancer
        tls: true
        authentication:
          type: scram-sha-512
      # TLS authentication
      - name: tls
        port: 9093
        type: internal
        tls: true   
        authentication:
          type: tls
    # Used with TLS authentication
    authorization:
      type: simple
      superUsers:
        - CN=authorize-tls-user
        - authorize-tls-user
    storage:
      type: jbod
      volumes:
      # As more load is coming in you can add more volumes 
      - id: 0
        type: persistent-claim
        size: 50Gi
        deleteClaim: false
      - id: 1
        type: persistent-claim
        size: 50Gi
        deleteClaim: false
    config:
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      default.replication.factor: 3
      min.insync.replicas: 2
  zookeeper:
    template:
      pod:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                  - key: eks.amazonaws.com/nodegroup
                    operator: In 
                    values:
                    - kafka-rnd-nodegroup
    replicas: 3
    storage:
      type: persistent-claim
      size: 50Gi
      deleteClaim: false
  # Strmzi operators
  entityOperator:
    topicOperator: {}
    userOperator: {}
  cruiseControl:
    brokerCapacity:
      disk: 1Gi
      cpuUtilization: 80
      inboundNetwork: 100KB/s
      outboundNetwork: 1000KB/s
    config:
      hard.goals: >
        com.linkdelin.kafka.cruisecontrol.analyzer.goals.NetworkInboundCapacityGoal,
        com.linkdelin.kafka.cruisecontrol.analyzer.goals.NetworkOutboundCapacityGoal,
        com.linkdelin.kafka.cruisecontrol.analyzer.goals.DiskCapacityGoal
        com.linkdelin.kafka.cruisecontrol.analyzer.goals.CpuCapacityGoal
      resources:
        requests:
          cpu: 2
          memory: 2gi
        limits:
          memory: 4Gi
          cpu: 2
      logging:
          type: inline
          loggers:
            rootLogger.level: "INFO"
      template:
        pod:
          securityContext:
            runAsUser: 1000001
            fsGroup: 0
          terminationGracePeriodSeconds: 120
      readinessProbe: 
        initialDelaySeconds: 150
        timeoutSeconds: 10
      livenessProbe:
        initialDelaySeconds: 150
        timeoutSeconds: 10

